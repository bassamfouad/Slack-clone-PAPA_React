{"version":3,"sources":["firebase.js","components/Header.jsx","features/appSlice.js","components/SideBarOption.jsx","components/SideBar.jsx","components/ChatInput.jsx","components/Message.jsx","components/Chat.jsx","components/Login.jsx","App.js","app/store.js","serviceWorker.js","index.js"],"names":["firebaseApp","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","auth","provider","GoogleAuthProvider","Header","useAuthState","user","HeaderContainer","HeaderLeft","HeaderAvatar","onClick","signOut","src","photoURL","alt","displayName","AccessTime","HeaderSearch","placeholder","HeaderRight","HelpOutline","styled","div","Avatar","appSlice","createSlice","name","initialState","roomId","reducers","enterRoom","state","action","payload","decrement","value","incrementByAmount","actions","selectRoomId","app","SideBarOption","Icon","Tittle","AddChannelOption","id","dispatch","useDispatch","SideBarOptionContainer","channelName","prompt","collection","add","fontSize","style","padding","SideBarOptionchannel","h3","SideBar","useCollection","channels","SideBarContainer","SideBarHeader","SideBarInfo","FiberManualRecordRounded","InsertCommentOutlined","InboxOutlined","DraftsOutlined","BookmarkBorder","PeopleAlt","Apps","FileCopyOutlined","ExpandLess","ExpandMore","Add","docs","map","doc","data","ChatInput","channelId","ChatRef","useState","input","setInput","ChatInputContainer","type","onChange","e","target","Button","hidden","preventDefault","message","timeStamp","FieldValue","serverTimestamp","image","current","scrollIntoView","behavior","Message","timestamp","userImage","display","alignItems","height","borderRadius","MessageInfo","Date","toDate","toUTCString","Chat","useRef","useSelector","useDocument","roomDetails","orderBy","roomMessages","loading","useEffect","ChatContainer","StarBorderOutlined","InfoOutlined","ChatMessages","ChatBottom","ref","Login","LoginConatiner","LoginInnerContainer","signInWithPopup","catch","alert","App","AppLoading","AppLoadingContent","color","fadeIn","marginLeft","className","AppBody","path","exact","configureStore","reducer","appReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.21c8cf4b.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDl-6qKMBG5f2p0-ReWtnlMME_1SzS-1QA\",\r\n  authDomain: \"cosmarereact.firebaseapp.com\",\r\n  projectId: \"cosmarereact\",\r\n  storageBucket: \"cosmarereact.appspot.com\",\r\n  messagingSenderId: \"554516461532\",\r\n  appId: \"1:554516461532:web:f12013793b037c92924119\",\r\n  measurementId: \"G-8RWME4KB3R\",\r\n};\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\n\r\nconst db = firebaseApp.firestore();\r\nconst auth = firebaseApp.auth();\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport { db, auth, provider };\r\n","import { Avatar } from \"@material-ui/core\";\r\nimport { AccessTime, HelpOutline } from \"@material-ui/icons\";\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\nimport { auth } from \"../firebase\";\r\nconst Header = () => {\r\n  const [user] = useAuthState(auth);\r\n  return (\r\n    <HeaderContainer>\r\n      <HeaderLeft>\r\n        <HeaderAvatar\r\n          onClick={() => auth.signOut()}\r\n          src={user?.photoURL}\r\n          alt={user?.displayName}\r\n        />\r\n        <AccessTime />\r\n      </HeaderLeft>\r\n      <HeaderSearch>\r\n        <SearchIcon />\r\n        <input placeholder=\"Search Here\" />\r\n      </HeaderSearch>\r\n\r\n      <HeaderRight>\r\n        <HelpOutline />\r\n      </HeaderRight>\r\n    </HeaderContainer>\r\n  );\r\n};\r\n\r\nexport default Header;\r\nconst HeaderRight = styled.div`\r\n  display: flex;\r\n  flex: 0.3;\r\n  align-items: flex-end;\r\n  > .MuiSvgIcon-root {\r\n    margin-left: auto;\r\n    margin-right: 20px;\r\n  }\r\n`;\r\nconst HeaderSearch = styled.div`\r\n  display: flex;\r\n  flex: 0.4;\r\n  opacity: 1;\r\n  border-radius: 6px;\r\n  background-color: #421f44;\r\n  text-align: center;\r\n  padding: 0 50px;\r\n  color: gray;\r\n  border: 1px solid gray;\r\n  > input {\r\n    background-color: transparent;\r\n    border: none;\r\n    text-align: center;\r\n    min-width: 30vw;\r\n    outline: 0;\r\n    color: white;\r\n  }\r\n`;\r\n\r\nconst HeaderContainer = styled.div`\r\n  display: flex;\r\n  position: fixed;\r\n  width: 100%;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 10px 0;\r\n  background-color: var(--slack-color);\r\n  color: white;\r\n`;\r\n\r\nconst HeaderLeft = styled.div`\r\n  display: flex;\r\n  flex: 0.3;\r\n  align-items: center;\r\n  margin-left: 20px;\r\n  > .MuiSvgIcon-root {\r\n    margin-left: auto;\r\n    margin-right: 30px;\r\n  }\r\n`;\r\nconst HeaderAvatar = styled(Avatar)`\r\n  cursor: pointer;\r\n  :hover {\r\n    opacity: 0.8;\r\n  }\r\n`;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const appSlice = createSlice({\r\n  name: \"app\",\r\n  initialState: {\r\n    roomId: null,\r\n  },\r\n  reducers: {\r\n    enterRoom: (state, action) => {\r\n      state.roomId = action.payload.roomId;\r\n    },\r\n    decrement: (state) => {\r\n      state.value -= 1;\r\n    },\r\n    incrementByAmount: (state, action) => {\r\n      state.value += action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { enterRoom } = appSlice.actions;\r\n\r\nexport const selectRoomId = (state) => state.app.roomId;\r\n\r\nexport default appSlice.reducer;\r\n","import { IconButton } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport { enterRoom } from \"../features/appSlice\";\r\nimport { db } from \"../firebase\";\r\nconst SideBarOption = ({ Icon, Tittle, AddChannelOption, id }) => {\r\n  const dispatch = useDispatch();\r\n  const addChannel = () => {\r\n    const channelName = prompt(\"please enter the channel name\");\r\n    if (channelName) {\r\n      db.collection(\"rooms\").add({\r\n        name: channelName,\r\n      });\r\n    }\r\n  };\r\n  const selectChannel = () => {\r\n    if (id) {\r\n      dispatch(\r\n        enterRoom({\r\n          roomId: id,\r\n        })\r\n      );\r\n    }\r\n  };\r\n  return (\r\n    <SideBarOptionContainer\r\n      onClick={AddChannelOption ? addChannel : selectChannel}\r\n    >\r\n      {Icon && <Icon fontSize=\"small\" style={{ padding: 10 }} />}\r\n      {Icon ? (\r\n        <h3>{Tittle}</h3>\r\n      ) : (\r\n        <SideBarOptionchannel>\r\n          <span>#</span>\r\n          {Tittle}\r\n        </SideBarOptionchannel>\r\n      )}\r\n    </SideBarOptionContainer>\r\n  );\r\n};\r\n\r\nexport default SideBarOption;\r\n\r\nconst SideBarOptionContainer = styled.div`\r\n  display: flex;\r\n  font-size: 12px;\r\n  align-items: center;\r\n  padding-left: 2px;\r\n  cursor: pointer;\r\n  :hover {\r\n    opacity: 0.9;\r\n    background-color: #340e36;\r\n  }\r\n  > h3 {\r\n    font-weight: 500;\r\n  }\r\n\r\n  > h3 > span {\r\n    padding: 15px;\r\n  }\r\n`;\r\nconst SideBarOptionchannel = styled.h3`\r\n  padding: 10px;\r\n  font-weight: 300;\r\n`;\r\n","import CreateIcon from \"@material-ui/icons/Create\";\r\nimport {\r\n  Add,\r\n  Apps,\r\n  BookmarkBorder,\r\n  DraftsOutlined,\r\n  ExpandLess,\r\n  ExpandMore,\r\n  FiberManualRecord,\r\n  FiberManualRecordRounded,\r\n  FileCopyOutlined,\r\n  InboxOutlined,\r\n  InsertCommentOutlined,\r\n  PeopleAlt,\r\n} from \"@material-ui/icons\";\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport SideBarOption from \"./SideBarOption\";\r\nimport { useCollection } from \"react-firebase-hooks/firestore\";\r\nimport { auth, db } from \"../firebase\";\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\n\r\nconst SideBar = () => {\r\n  const [user] = useAuthState(auth);\r\n  const [channels, loading, error] = useCollection(db.collection(\"rooms\"));\r\n  return (\r\n    <SideBarContainer>\r\n      <SideBarHeader>\r\n        <SideBarInfo>\r\n          <h2>Slack Clone</h2>\r\n          <h3>\r\n            <FiberManualRecordRounded />\r\n            {user?.displayName}\r\n          </h3>\r\n        </SideBarInfo>\r\n        <CreateIcon />\r\n      </SideBarHeader>\r\n      <SideBarOption Icon={InsertCommentOutlined} Tittle=\"Threads\" />\r\n      <SideBarOption Icon={InboxOutlined} Tittle=\"Mentions\" />\r\n      <SideBarOption Icon={DraftsOutlined} Tittle=\"Saved Items\" />\r\n      <SideBarOption Icon={BookmarkBorder} Tittle=\"Channel Browser\" />\r\n      <SideBarOption Icon={PeopleAlt} Tittle=\"Peeps\" />\r\n      <SideBarOption Icon={Apps} Tittle=\"apps\" />\r\n      <SideBarOption Icon={FileCopyOutlined} Tittle=\"File Browser\" />\r\n      <SideBarOption Icon={ExpandLess} Tittle=\"Show Less\" />\r\n\r\n      <hr />\r\n      <SideBarOption Icon={ExpandMore} Tittle=\"channels\" />\r\n      <hr />\r\n      <SideBarOption Icon={Add} Tittle=\"channels\" AddChannelOption />\r\n      {channels?.docs.map((doc) => (\r\n        <SideBarOption Tittle={doc.data().name} key={doc.id} id={doc.id} />\r\n      ))}\r\n    </SideBarContainer>\r\n  );\r\n};\r\n\r\nexport default SideBar;\r\n\r\nconst SideBarContainer = styled.div`\r\n  background-color: var(--slack-color);\r\n  color: white;\r\n  display: flex;\r\n  flex: 0.3;\r\n  border-top: 1px solid #49274b;\r\n  max-width: 260px;\r\n  margin-top: 60px;\r\n  flex-direction: column;\r\n  > hr {\r\n    margin-top: 10px;\r\n    margin-bottom: 10px;\r\n    border: 1px solid #49274b;\r\n  }\r\n`;\r\nconst SideBarHeader = styled.div`\r\n  display: flex;\r\n  border-bottom: 1px solid #49274b;\r\n  padding-bottom: 10px;\r\n  padding: 13px;\r\n  > .MuiSvgIcon-root {\r\n    padding: 8px;\r\n    color: #49274b;\r\n    font-size: 18px;\r\n    background-color: white;\r\n    border-radius: 99px;\r\n  }\r\n`;\r\nconst SideBarInfo = styled.div`\r\n  flex: 1;\r\n  > h2 {\r\n    font-size: 15px;\r\n    font-weight: 900;\r\n    margin-bottom: 5px;\r\n  }\r\n  > h3 {\r\n    display: flex;\r\n    font-size: 13;\r\n    font-weight: 400;\r\n    align-items: center;\r\n  }\r\n  > h3 > .MuiSvgIcon-root {\r\n    font-size: 14px;\r\n    margin-top: 1px;\r\n    margin-right: 2px;\r\n    color: green;\r\n  }\r\n`;\r\n","import { Button } from \"@material-ui/core\";\r\nimport React, { useRef, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { auth, db } from \"../firebase\";\r\nimport firebase from \"firebase\";\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\nconst ChatInput = ({ channelName, channelId, ChatRef }) => {\r\n  const [input, setInput] = useState(\"\");\r\n  const [user] = useAuthState(auth);\r\n  const sendMessage = (e) => {\r\n    e.preventDefault();\r\n    if (!channelId) {\r\n      return false;\r\n    }\r\n    db.collection(\"rooms\").doc(channelId).collection(\"messages\").add({\r\n      message: input,\r\n      timeStamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n      user: user.displayName,\r\n      image: user.photoURL,\r\n    });\r\n    ChatRef.current.scrollIntoView({\r\n      behavior: \"smooth\",\r\n    });\r\n    setInput(\"\");\r\n  };\r\n  return (\r\n    <ChatInputContainer>\r\n      <form action=\"\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder={`message ${channelName}`}\r\n          value={input}\r\n          onChange={(e) => setInput(e.target.value)}\r\n        />\r\n        <Button hidden type=\"submit\" onClick={sendMessage}>\r\n          SEND\r\n        </Button>\r\n      </form>\r\n    </ChatInputContainer>\r\n  );\r\n};\r\n\r\nexport default ChatInput;\r\n\r\nconst ChatInputContainer = styled.div`\r\n  border-radius: 20px;\r\n  > form {\r\n    position: relative;\r\n    display: flex;\r\n    justify-content: center;\r\n  }\r\n  > form > input {\r\n    position: fixed;\r\n    bottom: 30px;\r\n    width: 60%;\r\n    border: 1px solid gray;\r\n    border-radius: 3px;\r\n    padding: 20px;\r\n    outline: none;\r\n  }\r\n  > form > button {\r\n    display: none !important;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Message = ({ message, user, timestamp, userImage }) => {\r\n  return (\r\n    <messageContainer\r\n      style={{ display: \"flex\", alignItems: \"center\", padding: \"20px\" }}\r\n    >\r\n      <img\r\n        style={{ height: \"50px\", borderRadius: \"8px\" }}\r\n        src={userImage}\r\n        alt=\"\"\r\n      />\r\n      <MessageInfo>\r\n        <h4>\r\n          {user}\r\n          <span>{new Date(timestamp?.toDate()).toUTCString()}</span>\r\n        </h4>\r\n        <p>{message}</p>\r\n      </MessageInfo>\r\n    </messageContainer>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n\r\nconst messageContainer = styled.div``;\r\nconst MessageInfo = styled.div`\r\n  padding-left: 10px;\r\n  > h4 > span {\r\n    color: gray;\r\n    font-weight: 300;\r\n    margin-left: 4px;\r\n    font-size: 10px;\r\n  }\r\n`;\r\n","import { InfoOutlined, StarBorderOutlined } from \"@material-ui/icons\";\r\nimport React, { useEffect, useRef } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport { selectRoomId } from \"../features/appSlice\";\r\nimport ChatInput from \"./ChatInput\";\r\nimport { useCollection, useDocument } from \"react-firebase-hooks/firestore\";\r\nimport { db } from \"../firebase\";\r\nimport Message from \"./Message\";\r\nconst Chat = () => {\r\n  const ChatRef = useRef(null);\r\n  const roomId = useSelector(selectRoomId);\r\n  const [roomDetails] = useDocument(\r\n    roomId && db.collection(\"rooms\").doc(roomId)\r\n  );\r\n  const [roomMessages, loading] = useCollection(\r\n    roomId &&\r\n      db\r\n        .collection(\"rooms\")\r\n        .doc(roomId)\r\n        .collection(\"messages\")\r\n        .orderBy(\"timeStamp\", \"asc\")\r\n  );\r\n  useEffect(() => {\r\n    ChatRef?.current?.scrollIntoView({\r\n      behavior: \"smooth\",\r\n    });\r\n  }, [roomId, loading]);\r\n  return (\r\n    <ChatContainer>\r\n      {roomDetails && roomMessages && (\r\n        <>\r\n          <Header>\r\n            <HeaderLeft>\r\n              <h4>\r\n                <strong>{roomDetails?.data().name}</strong>\r\n              </h4>\r\n              <StarBorderOutlined />\r\n            </HeaderLeft>\r\n            <HeaderRight>\r\n              <p>\r\n                <InfoOutlined />\r\n                Details\r\n              </p>\r\n            </HeaderRight>\r\n          </Header>\r\n          <ChatMessages>\r\n            {roomMessages?.docs.map((doc) => {\r\n              const { message, timestamp, user, image } = doc.data();\r\n              return (\r\n                <Message\r\n                  key={doc.id}\r\n                  message={message}\r\n                  timestamp={timestamp}\r\n                  user={user}\r\n                  userImage={image}\r\n                />\r\n              );\r\n            })}\r\n            <ChatBottom ref={ChatRef} />\r\n          </ChatMessages>\r\n          <ChatInput\r\n            channelName={roomDetails?.data().name}\r\n            channelId={roomId}\r\n            ChatRef={ChatRef}\r\n          />\r\n        </>\r\n      )}\r\n    </ChatContainer>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n\r\nconst ChatContainer = styled.div`\r\n  flex: 0.7;\r\n  flex-grow: 1;\r\n  overflow-y: scroll;\r\n  margin-top: 60px;\r\n`;\r\nconst Header = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding: 20px;\r\n  border-bottom: 1px solid lightgray;\r\n`;\r\nconst HeaderLeft = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  > h4 {\r\n    display: flex;\r\n    text-transform: lowercase;\r\n    margin-right: 10px;\r\n  }\r\n  > h4 > .MuiSvgIcon-root {\r\n    margin-left: 10px;\r\n    font-size: 18px;\r\n  }\r\n`;\r\nconst HeaderRight = styled.div`\r\n  > p {\r\n    display: flex;\r\n    align-items: center;\r\n    font-size: 14px;\r\n  }\r\n  > p > .MuiSvgIcon-root {\r\n    margin-right: 5px !important;\r\n    font-size: 16px;\r\n  }\r\n`;\r\n\r\nconst ChatMessages = styled.div``;\r\nconst ChatBottom = styled.div`\r\n  padding-bottom: 200px;\r\n`;\r\n","import { Button } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { auth, provider } from \"../firebase\";\r\n\r\nconst Login = () => {\r\n  const signIn = (e) => {\r\n    e.preventDefault();\r\n    auth.signInWithPopup(provider).catch((e) => alert(e.message));\r\n  };\r\n  return (\r\n    <LoginConatiner>\r\n      <LoginInnerContainer>\r\n        <img src=\"./logo512.png\" alt=\"\" />\r\n        <h1>Sign in</h1>\r\n        <p>Bassam Fouad the slack Clone</p>\r\n        <Button onClick={signIn}>Sign in With Google</Button>\r\n      </LoginInnerContainer>\r\n    </LoginConatiner>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n\r\nconst LoginConatiner = styled.div`\r\n  background-color: #fbfbfb;\r\n  height: 100vh;\r\n  display: grid;\r\n  place-items: center;\r\n`;\r\nconst LoginInnerContainer = styled.div`\r\n  padding: 100px;\r\n  text-align: center;\r\n  background-color: white;\r\n  margin-bottom: 40px;\r\n  box-shadow: rgba(0, 0, 0, 0.1) 0px 4px 6px -1px,\r\n    rgba(0, 0, 0, 0.06) 0px 2px 4px -1px;\r\n  > img {\r\n    object-fit: contain;\r\n    height: 25vh;\r\n    margin-bottom: 40px;\r\n  }\r\n  > button {\r\n    margin-top: 50px;\r\n    text-transform: inherit !important;\r\n    background-color: purple;\r\n    color: white;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport \"./App.css\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Header from \"./components/Header\";\r\nimport SideBar from \"./components/SideBar\";\r\nimport Chat from \"./components/Chat\";\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\nimport { auth } from \"./firebase\";\r\nimport Login from \"./components/Login\";\r\nimport Spinner from \"react-spinkit\";\r\nfunction App() {\r\n  const [user, loading] = useAuthState(auth);\r\n\r\n  if (loading) {\r\n    return (\r\n      <AppLoading>\r\n        <AppLoadingContent>\r\n          <img src=\"./logo512.png\" />\r\n          <Spinner name=\"ball-spin-fade-loader\" color=\"purple\" fadeIn=\"none\" />\r\n          <Spinner\r\n            name=\"ball-spin-fade-loader\"\r\n            color=\"green\"\r\n            fadeIn=\"none\"\r\n            style={{ marginLeft: \"100%\" }}\r\n          />\r\n        </AppLoadingContent>\r\n      </AppLoading>\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"app\">\r\n      <Router>\r\n        {!user ? (\r\n          <Login />\r\n        ) : (\r\n          <>\r\n            <Header />\r\n            <AppBody>\r\n              <SideBar />\r\n              <Switch>\r\n                <Route path=\"/\" exact>\r\n                  <Chat />\r\n                </Route>\r\n              </Switch>\r\n            </AppBody>\r\n          </>\r\n        )}\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\nconst AppBody = styled.div`\r\n  display: flex;\r\n  height: 100vh;\r\n`;\r\nconst AppLoading = styled.div`\r\n  text-align: center;\r\n  padding-bottom: 100px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  > img {\r\n    height: 100px;\r\n    padding: 20px;\r\n  }\r\n`;\r\nconst AppLoadingContent = styled.div``;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport appReducer from \"../features/appSlice\";\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    app: appReducer,\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}